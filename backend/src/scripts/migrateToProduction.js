const migrateCustomExcelClients = require('./migrateCustomExcelClients');

// Configuraci√≥n para producci√≥n
process.env.NODE_ENV = 'production';
process.env.DATABASE_URL = process.env.DATABASE_URL || 'postgresql://postgres:tu_password@db.tu_proyecto.supabase.co:5432/postgres';

console.log('üöÄ MIGRACI√ìN A PRODUCCI√ìN');
console.log('========================');
console.log('‚ö†Ô∏è  ADVERTENCIA: Este script modificar√° la base de datos de PRODUCCI√ìN');
console.log('üìä Base de datos:', process.env.DATABASE_URL ? 'Configurada' : 'NO CONFIGURADA');
console.log('');

// Verificar que se proporciona el archivo Excel
const excelFilePath = process.argv[2];

if (!excelFilePath) {
  console.log('‚ùå Uso: node migrateToProduction.js <ruta_del_archivo_excel>');
  console.log('üìù Ejemplo: node migrateToProduction.js ./db_clientes.xlsx');
  console.log('');
  console.log('üìã Pasos:');
  console.log('   1. Aseg√∫rate de tener el archivo db_clientes.xlsx en el directorio backend');
  console.log('   2. Configura la variable DATABASE_URL con tu URL de Supabase');
  console.log('   3. Ejecuta el comando');
  process.exit(1);
}

// Confirmar antes de ejecutar
const readline = require('readline');
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

rl.question('¬øEst√°s seguro de que quieres migrar a PRODUCCI√ìN? (escribe "SI" para confirmar): ', (answer) => {
  if (answer.toUpperCase() === 'SI') {
    console.log('üîÑ Iniciando migraci√≥n a producci√≥n...');
    
    migrateCustomExcelClients(excelFilePath)
      .then(() => {
        console.log('\nüéä ¬°Migraci√≥n a producci√≥n completada exitosamente!');
        process.exit(0);
      })
      .catch((error) => {
        console.error('\nüí• Error en la migraci√≥n a producci√≥n:', error);
        process.exit(1);
      });
  } else {
    console.log('‚ùå Migraci√≥n cancelada');
    process.exit(0);
  }
  
  rl.close();
});
